"""
2193번 이친수

1.  N개 자릿수를 bottom-up 방식으로 2가지 케이스를 고려하여 DP로 해결.

2.  먼저, 첫째 자리에 0과 1이 들어가 이친수가 될 경우의 수를 1로 설정해놓은 후
    두번째 자리부터 0이 들어갈 떄와 1이 들어갈 경우를 나누어 생각하였다.
    0이 들어갈 경우 이전 자리수의 모든 이친수가 되는 경우의 수를 더할 수 있으며
    1이 들어갈 경우는 바로 이전 자리수가 0이 되었던 이친수 경우의 수만 더해진다.

3.  이후 0으로 시작하는 경우의 수를 모두 제거한 뒤 마지막에 첫째 자리에 0이 들어가는 경우 또한 제거해 준다.
"""

N = int(input())

cache = [[0] * 2 for _ in range(N + 1)]

cache[1][0] = cache[1][1] = 1

for i in range(2, N + 1):
    if i != N:
        cache[i][0] = cache[i - 1][0] + cache[i - 1][1]
        cache[i][1] = cache[i - 1][0]
    else:
        cache[i][0] = 0
        cache[i][1] = cache[i - 1][0]

cache[1][0] = 0

print(sum(cache[N]))
